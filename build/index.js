(()=>{"use strict";var e={n:s=>{var t=s&&s.__esModule?()=>s.default:()=>s;return e.d(t,{a:t}),t},d:(s,t)=>{for(var o in t)e.o(t,o)&&!e.o(s,o)&&Object.defineProperty(s,o,{enumerable:!0,get:t[o]})},o:(e,s)=>Object.prototype.hasOwnProperty.call(e,s)};const s=window.React,t=window.wp.i18n,o=window.wp.components,r=window.wp.element,n=window.wp.data,a=window.wp.api;var i=e.n(a);const p=window.wp.apiFetch;var c=e.n(p);const l=window.wp.notices,m=window.ReactJSXRuntime,d=()=>{const e=(0,n.useSelect)((e=>e(l.store).getNotices().filter((e=>"snackbar"===e.type))),[]),{removeNotice:s}=(0,n.useDispatch)(l.store);return(0,m.jsx)(o.SnackbarList,{className:"edit-site-notices",notices:e,onRemove:s})};function h(){const[e,a]=(0,s.useReducer)(((e,s)=>({...e,...s})),{isLoaded:!1,settings:{active:!0,authentication:!1,token:"",storage:"apc",features:{emails:!0,errors:!0,options:!0,posts:!0,queries:!0,requests:!0,remote_requests:!0,updates:!0,users:!0}}}),{isLoaded:p,settings:l}=e,{active:h,authentication:u,token:_,features:g}=l;return(0,s.useEffect)((()=>{i().loadPromise.then((()=>{const e=new(i().models.Settings);!1===p&&e.fetch().then((e=>{null!==e.prompress_settings&&a({isLoaded:!0,settings:{active:e.prompress_settings.active,authentication:e.prompress_settings.authentication,token:e.prompress_settings.token,features:e.prompress_settings.features}}),a({isLoaded:!0})})).catch((e=>{e.log(e)}))}))}),[]),(0,s.useEffect)((()=>{c()({method:"GET",path:"/prompress/v1/storage/compatibility"}).then((e=>{a({isStorageCompatLoaded:!0,storageCompat:e})})).catch((e=>{e.log(e)}))}),[]),p?(0,m.jsxs)(r.Fragment,{children:[(0,m.jsx)("div",{className:"prompress__header",children:(0,m.jsx)("div",{className:"prompress__container",children:(0,m.jsx)("div",{className:"prompress__title",children:(0,m.jsxs)("h1",{children:[(0,t.__)("PromPress Settings","prompress")," ",(0,m.jsx)(o.Icon,{icon:"admin-plugins"})]})})})}),(0,m.jsxs)("div",{className:"prompress__main",children:[(0,m.jsx)("div",{className:"components-panel",children:(0,m.jsxs)("div",{className:"components-panel__body is-opened",children:[(0,m.jsx)("h2",{className:"components-panel__body-title",children:(0,t.__)("General","prompress")}),(0,m.jsx)("p",{children:"You can control whether monitoring is active or inactive globally."}),(0,m.jsx)(o.ToggleControl,{label:"Active",help:h?"Monitoring is active.":"Monitoring is not active.",checked:h,onChange:()=>{a({settings:{...l,active:!h}})}}),(0,m.jsx)(o.Button,{variant:"secondary",onClick:()=>{c()({method:"GET",path:"/prompress/v1/storage/wipe"}).then((()=>{(0,n.dispatch)("core/notices").createNotice("success",(0,t.__)("Storage wiped","prompress"),{type:"snackbar",isDismissible:!0})})).catch((e=>{(0,n.dispatch)("core/notices").createNotice("success",(0,t.__)("Failed to wipe storage","prompress"),{type:"snackbar",isDismissible:!0})}))},children:(0,t.__)("Wipe Storage","prompress")})]})}),(0,m.jsx)("div",{className:"components-panel",children:(0,m.jsxs)("div",{className:"components-panel__body is-opened",children:[(0,m.jsx)("h2",{className:"components-panel__body-title",children:(0,t.__)("REST API","prompress")}),(0,m.jsx)("p",{children:"Enable authentication for the metrics endpoint."}),(0,m.jsx)(o.ToggleControl,{label:(0,t.__)("Require Authentication","prompress"),help:u?"Authentication is required.":"Authentication is not required.",checked:u,onChange:()=>{a({settings:{...l,authentication:!u}})}}),u&&(0,m.jsx)(m.Fragment,{children:(0,m.jsx)(o.TextControl,{label:(0,t.__)("Bearer Token","prompress"),value:_,onChange:e=>{a({settings:{...l,token:e}})},help:(0,t.__)("Set a bearer token which must be sent by Prometheus to access the metrics endpoint.","prompress")})})]})}),(0,m.jsx)("div",{className:"components-panel",children:(0,m.jsxs)("div",{className:"components-panel__body is-opened",children:[(0,m.jsx)("h2",{className:"components-panel__body-title",children:(0,t.__)("Features","prompress")}),(0,m.jsx)("p",{children:"Toggle the following features on/off to control what is being monitored."}),(0,m.jsx)(o.ToggleControl,{label:(0,t.__)("Emails","prompress"),help:(0,t.__)("Track the number of emails sent.","prompress"),checked:g.emails,onChange:()=>{a({settings:{...l,features:{...g,emails:!g.emails}}})}}),(0,m.jsx)(o.ToggleControl,{label:(0,t.__)("Errors","prompress"),help:(0,t.__)("Track the number of errors thrown.","prompress"),checked:g.errors,onChange:()=>{a({settings:{...l,features:{...g,errors:!g.errors}}})}}),(0,m.jsx)(o.ToggleControl,{label:(0,t.__)("Options","prompress"),help:(0,t.__)("Track the number of options.","prompress"),checked:g.options,onChange:()=>{a({settings:{...l,features:{...g,options:!g.options}}})}}),(0,m.jsx)(o.ToggleControl,{label:(0,t.__)("Posts","prompress"),help:(0,t.__)("Track the number of posts (with post type).","prompress"),checked:g.posts,onChange:()=>{a({settings:{...l,features:{...g,posts:!g.posts}}})}}),(0,m.jsx)(o.ToggleControl,{label:(0,t.__)("Queries","prompress"),help:(0,t.__)("Track the number and length of database queries. Note: The `SAVEQUERIES` constant must be set and true.","prompress"),checked:g.queries,onChange:()=>{a({settings:{...l,features:{...g,queries:!g.queries}}})}}),(0,m.jsx)(o.ToggleControl,{label:(0,t.__)("Requests","prompress"),help:(0,t.__)("Track the number and length of requests.","prompress"),checked:g.requests,onChange:()=>{a({settings:{...l,features:{...g,requests:!g.requests}}})}}),(0,m.jsx)(o.ToggleControl,{label:(0,t.__)("Remote Requests","prompress"),help:(0,t.__)("Track the number and length of remote requests.","prompress"),checked:g.remote_requests,onChange:()=>{a({settings:{...l,features:{...g,remote_requests:!g.remote_requests}}})}}),(0,m.jsx)(o.ToggleControl,{label:(0,t.__)("Updates","prompress"),help:(0,t.__)("Track the number of plugin and theme updates available.","prompress"),checked:g.updates,onChange:()=>{a({settings:{...l,features:{...g,updates:!g.updates}}})}}),(0,m.jsx)(o.ToggleControl,{label:(0,t.__)("Users","prompress"),help:(0,t.__)("Track the number of users (with role).","prompress"),checked:g.users,onChange:()=>{a({settings:{...l,features:{...g,users:!g.users}}})}})]})})]}),(0,m.jsx)("div",{className:"prompress__save",children:(0,m.jsx)(o.Button,{variant:"primary",onClick:()=>{new(i().models.Settings)({prompress_settings:l}).save(),(0,n.dispatch)("core/notices").createNotice("success",(0,t.__)("Settings Saved","prompress"),{type:"snackbar",isDismissible:!0})},children:(0,t.__)("Save","prompress")})}),(0,m.jsx)("div",{className:"prompress__notices",children:(0,m.jsx)(d,{})})]}):(0,m.jsx)(o.Placeholder,{children:(0,m.jsx)(o.Spinner,{})})}document.addEventListener("DOMContentLoaded",(()=>{const e=document.getElementById("prompress-plugin-settings");e&&(0,r.render)((0,m.jsx)(h,{}),e)}))})();